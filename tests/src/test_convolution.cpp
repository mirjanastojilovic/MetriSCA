/**
 * MetriSCA - A side-channel analysis library
 * Copyright 2021, School of Computer and Communication Sciences, EPFL.
 *
 * All rights reserved. Use of this source code is governed by a
 * BSD-style license that can be found in the LICENSE.md file.
 */

#include <catch2/catch.hpp>
#include <metrisca/utils/numerics.hpp>

TEST_CASE("Convolution work as expected with N=20, M=5", "[convolution]")
{
    std::vector<double> A = { 26.084094547519943, -8.494159144271691, 19.18134978002825, 14.858064819402355, 19.224330553529448, 50.85947305350675, 7.041452370678394, 8.25019619934865, -2.110730413413023, 6.501741031897943, 13.821062756421155, 28.333284355766715, 13.265398568812293, 18.529485738190395, 21.888503849980466, 5.730267163897938, 43.20798593512757, 25.044812949075425, 32.24827249600903, 5.737417437105524 };
    
    std::vector<double> B = { 5.581612956264628, 7.955667706331262, 11.709432866898794, 2.605456170855316, 15.214837945087156 };
    
    std::vector<double> R = { 145.59132007886885, 160.10527990835521, 344.9161168523543, 204.0315909492163, 824.8454386273122, 531.5387033294542, 999.582902285375, 973.7556416710341, 561.3131549597381, 908.2678867427743, 232.7841393532864, 464.2588924307099, 446.1149024876954, 675.6593211450681, 709.0242426118673, 888.7403104585976, 793.1689743830971, 889.5896696076431, 1233.1465946729227, 781.6027393408219, 1145.9096348702556, 532.2561352685151, 505.60082970206815, 87.29387652887783 };
    
    
    std::vector<double> result = metrisca::numerics::Convolve(nonstd::span<double>(A.begin(), A.end()), nonstd::span<double>(B.begin(), B.end()));
    REQUIRE_THAT(result, Catch::Approx(result).margin(1e-3));
}

TEST_CASE("Convolution work as expected with N=8, M=10", "[convolution]")
{
    std::vector<double> A = { 23.30480570170244, 33.17455522534241, 3.837764442479738, 8.241036636687015, 42.07869086077279, -25.203440568238527, 11.865749854802571, 11.849165594281091 };
    
    std::vector<double> B = { 9.99999861159831, 13.82369618343258, 12.061498399176395, 8.478107841422029, 13.251425013129571, 4.828310116774361, -1.3564372691415354, 9.920035890422138, 7.016162007121762, 13.281887947134642 };
    
    std::vector<double> R = { 233.04802466059274, 653.9040598280774, 778.0634882162789, 733.177945307698, 1171.0769685604141, 1013.7178586318324, 527.074618006356, 649.1972831390417, 1178.0307822385328, 681.8874484691491, 628.2279480541231, 774.7120645081599, 195.78470308927365, 483.6890494173765, -133.9531022255116, 240.73522543890624, 157.3792896902845 };
    
    
    std::vector<double> result = metrisca::numerics::Convolve(nonstd::span<double>(A.begin(), A.end()), nonstd::span<double>(B.begin(), B.end()));
    REQUIRE_THAT(result, Catch::Approx(result).margin(1e-3));
}

TEST_CASE("Convolution work as expected with N=150, M=50", "[convolution]")
{
    std::vector<double> A = { -11.167168104095214, 5.466668068193904, 36.08184674647832, 30.935068488909728, 37.72162058347551, 3.729043326951391, 15.031839713808008, 2.1676643078872395, 44.865460474280496, 21.294421103366442, -27.280443129070434, 9.257027848282245, -1.907220689875576, 27.737441450955963, 8.820342261915554, 58.433263707609704, 1.2290586896244236, 44.012168690288206, 25.295779983194116, 21.126464003255823, 13.978485330902718, 37.62918882021438, 20.81322826396058, 45.01524858586209, 17.957563638445865, 28.673099596483468, 20.543270537095676, -29.391541925067756, 1.3825148616306322, 17.385960059545383, 48.91983199139426, -16.754731498281842, 24.421142219286576, 39.52756581163479, 26.79001603967184, 20.291015209096777, 30.148353133266177, 16.110601544483515, 12.884363722564405, 41.98714162130868, 16.07406627729435, 36.43075743158011, 14.114888023396368, 47.81667579859062, 21.02382595908809, 42.76382670491658, 2.3906545323514052, 23.13012968960959, -2.662571745078278, 43.18354107546813, 9.74259496624492, 27.500177543964767, 13.220241250674267, -18.352814722154733, 35.86359163290567, 11.211577588705863, -0.14811348400163382, 0.027055414243505993, 20.22001492601298, 22.037231244452833, 43.879069665569986, 10.551173783326348, 0.7654072129664797, 36.75361652171294, 49.700334422068046, 26.379927047082468, 41.300691704245224, 12.17486429390282, -31.69561045452535, 62.91719808646033, 5.269778559648895, 31.360164850005862, 34.17095619037194, 33.67193409614329, -11.440736875437004, -5.181186611593347, -17.154043654471067, 4.665552605758087, 1.1064597818253041, 38.79243195972083, 39.24496360766849, 9.342166428217842, 65.02536537371546, -2.0115832272262715, 30.952306732254865, 68.0642002431517, 4.061833813025901, 50.090457177184376, 16.97239051637539, 10.990606662112512, 27.199668822997893, -17.10072320317655, 21.561201063787536, 20.59762999872031, -5.679235692957114, -18.1724172937026, -6.1351313604517586, 1.2722440569530988, 28.89208373968932, -0.516674025159265, 2.080480234750681, -1.6202921247094153, 29.12932898070627, 19.978942982545494, 31.802871284172205, 17.634558071976073, -15.6868250180814, 23.020759855785727, 28.55982284250876, 20.908003705845967, 31.194019167776577, 33.13341542102516, -13.111049443281907, 43.17741920995752, -22.24966047338424, 11.579313012661768, -18.247404612581228, 18.095959448035295, 25.930195376159055, 23.62975841226292, -12.653498811595675, 31.562945848522684, 18.24856741590021, -7.837921695250692, 26.653590572202138, 6.883835371136351, 41.72296362289154, 11.89992841093207, -0.1120180789797729, 14.275350430237168, -0.4923450707648236, 47.18371302531186, 12.327379073696042, -1.7381523697800532, 6.249527967723743, 35.474367236359456, 32.08387258212257, 12.394514509074128, 8.298645065127857, 46.802871842540995, 18.9536790863441, 12.470892803047402, 28.347722067219934, 20.698821824935415, 40.0441424571043, 27.5237584993665, 52.865538741487256, 60.17000613749936, 3.833625920954468, 15.925926584639853 };
    
    std::vector<double> B = { 9.911911946280524, 6.876748081226584, 10.826564409337236, 9.41246414569993, 11.141540959085718, 4.4081642763343885, 20.092256679708818, 8.689628366218544, 6.104915340071431, 4.075774793953292, -1.189037299383191, 8.664708866032854, 21.775366248864987, 6.722636922527855, 9.895105558205929, 12.267925386723787, 18.955947365670404, 7.17225237379319, 17.51767813703505, 2.853033977228571, 15.27892496408541, 18.194337690703723, 8.919108972667058, 12.184581511668222, 11.037708488304292, 5.885414946197701, 18.99799672500158, 2.2030462163376914, 15.2322333039437, 10.7253981082456, 8.872374312685611, 11.34958398376242, 3.9218439292235914, 9.079970854905701, 7.016886065178433, 2.1377376905891587, 10.00901820693962, 15.037244431737477, 7.62527138868468, 8.296062396987983, 9.240590269741984, 7.130984370960282, 15.859106617070967, 4.3259954181002165, 6.509900779781483, 10.107855740702089, 10.425320756962677, 13.468920316995362, 7.985031751007302, 11.854887204883635 };
    
    std::vector<double> R = { -110.68798693710418, -22.60866930109004, 274.33092221005336, 508.82610985115537, 904.3038487362633, 982.5840260703014, 1075.9404774066986, 1036.8001994567671, 1918.3899114165151, 1815.3341539650612, 1848.6554117245018, 1282.77689208208, 911.353836683814, 1210.7945239506362, 2096.9636684957695, 2952.983782285562, 1966.010745266168, 2957.526052840259, 2897.7551368306213, 3967.84425299354, 4504.5146100961365, 4434.1887549024905, 3704.487045843581, 4856.301280462496, 5238.483212516946, 5104.625847274016, 4849.914893876511, 5486.776304821625, 4460.8258167216545, 6509.181600728378, 5710.749387556404, 5462.878312056586, 6076.925340352198, 6104.297660747243, 6220.264002299907, 7320.970845093572, 7416.675144529066, 7769.43822946072, 7198.810563514804, 8115.486517093326, 7127.320688118289, 9426.288789465689, 7927.010209863558, 8128.449170092729, 9029.371715692341, 10099.761362505107, 9773.36206906416, 8879.426276230955, 9264.672907875316, 9785.35147068725, 10079.572922910544, 11342.590033628705, 9186.212198782076, 9560.923544609526, 9828.33491879052, 10262.593145649476, 9598.975055288687, 9982.024405669104, 9119.312023755529, 9463.706841121068, 10202.580756104053, 10945.257889763805, 10338.408864926025, 11096.782114828393, 10029.686566997436, 10552.22264053432, 11343.97997295683, 11145.71059442737, 8337.577646478856, 9966.448528243403, 10633.997563362525, 10076.703708499206, 11052.797534240706, 9056.478917179744, 7484.811314223306, 10860.866578638985, 8738.331620931656, 9322.832187417865, 9863.084191448002, 9045.568653947768, 9417.614598453638, 10414.793588824956, 9677.82139362031, 9558.176378084207, 10223.924265328926, 11743.206310899584, 10235.248817674368, 11212.3872654281, 10247.343308682599, 9862.780840298034, 9526.775661176236, 10524.169141121733, 9241.044466948648, 9596.390200763646, 8951.094101557675, 7988.798578252313, 8535.149300444982, 8600.597024420003, 8099.397143758678, 7950.362271924936, 9359.44270229088, 8015.712419810677, 8415.066893401967, 9057.551228532242, 7550.724183585344, 9669.602890268245, 8919.410471522053, 7249.806120960888, 10144.557530857828, 8072.049856310221, 9422.209301836723, 9352.130778435638, 6306.652289998122, 9240.401524799598, 7283.642511756248, 7355.038056044596, 7716.008745922295, 5766.6438866788485, 7324.2021634839275, 7752.005322584907, 6162.27538346039, 7225.257251350114, 6773.565433061975, 6289.824150914411, 7752.558397322699, 7648.896268945826, 7645.328709228554, 8035.417903728368, 7179.782443014622, 8322.343283632985, 7211.083449218867, 8264.503975483472, 6163.108641881786, 7900.191079071514, 6895.7081304720405, 6371.730461755027, 6045.175317796685, 6490.804273279622, 6274.099488919619, 7555.823125576937, 5582.600040558664, 6982.98369871576, 6993.910222936672, 6660.714501308173, 7171.098244129208, 7246.187691274283, 7807.39421113427, 10196.411435619511, 8020.567908569952, 8674.032909758069, 9295.27769146252, 8844.466764700517, 9275.364135020931, 8076.729274999793, 7269.485784451197, 8724.842402215205, 6993.902641014839, 8364.20282123475, 7788.40895646384, 8172.7485240133565, 7963.964577021954, 6876.072259124139, 7574.799479729512, 7090.070782037569, 7007.327229805069, 7111.491475543899, 6439.905504503476, 7057.438626356498, 7240.149660647627, 5598.276094555796, 6022.117045725488, 5414.8669388236085, 5623.794496147025, 6274.8319445623, 4415.575561298946, 5351.01452222344, 4675.944895152598, 4574.678003890342, 4454.075798410608, 3705.29273559906, 4164.6820976518375, 3922.9360938045256, 3595.0398915858455, 4039.6793582255314, 4156.468708208631, 3457.020712040568, 3529.053916482959, 2974.648744677169, 3193.682840656384, 2863.2577309404505, 2127.4784785350544, 2522.8483967906795, 2189.03320715363, 2176.256159990642, 1759.792824331139, 1324.8421033231873, 958.4252967203493, 172.61623232119388, 188.80006329416312 };
    
    
    std::vector<double> result = metrisca::numerics::Convolve(nonstd::span<double>(A.begin(), A.end()), nonstd::span<double>(B.begin(), B.end()));
    REQUIRE_THAT(result, Catch::Approx(result).margin(1e-3));
}

TEST_CASE("Convolution work as expected with N=50, M=50", "[convolution]")
{
    std::vector<double> A = { 34.08463817148793, 6.202403995227856, 53.55441283392502, 9.914540541882243, 3.2390254844830437, 21.69933931947101, 9.229681731484042, 32.40439453522687, 33.50650182169197, 25.113613998376778, 14.301480730046219, -10.191803242454181, 35.67139208432919, 20.07057596997447, 7.86489841337994, 25.044112003472296, -1.4846365655846299, 56.14261814480987, 39.780247573747275, 7.144187812852909, 13.048668457774163, 20.228266061529972, 23.514232772289155, 16.8600927472648, -13.923709541052254, 24.106233985005353, -3.4490676700911393, 31.78624861896271, -8.897727261988514, 10.082382314632826, 12.922015321308802, 20.587861300180492, 21.07502158815669, 48.30103849730976, 39.40148394003289, 16.701706778245274, -0.3952322987666399, 23.49233145605897, 37.983692804540254, 46.522636511546025, 24.52781175416281, 21.480534884453775, 14.588009508683955, 19.430958534301187, 20.56374102415338, 26.818200544934125, 39.83665585460536, 36.521435536949554, -43.31199135800203, 6.686590703029804 };
    
    std::vector<double> B = { 10.712064884343711, 6.5117808024250206, 19.072733101969042, 8.170715052274872, 16.529990498728523, 23.303357403483247, 6.617990790025044, 18.212572846734254, 16.173131295725295, 8.353858233750122, 18.78860125933932, 3.078394547823244, 7.227235388654064, 11.491159031736736, 7.123470322367563, 13.908972285586637, 9.467818183518535, 12.145745432233142, 7.886833376638718, 8.152620368515043, 21.235565625474763, 6.675813920152459, 9.322835619347149, 9.485150816804339, 11.527622456587148, 7.145308200780992, 16.638309406189705, 19.340624474045683, 12.175521946986466, 23.957484123158782, 11.646509562320347, 9.085230232343099, 5.811928444716567, 4.148725744806196, 10.75442871220036, 4.873815787839514, 12.920545407485282, 13.587840832863987, 8.383021185945761, 6.224749534591801, 6.980152154113383, 12.405914668044822, 4.638372970854791, 7.422558644283212, 1.5931320158543567, 17.358939213320756, 15.441450013619221, 13.139847036839765, 11.428355129569896, 12.659392871443984 };
    
    std::vector<double> R = { 365.1168556523571, 288.39224653849163, 1264.1542471069188, 851.7324611108825, 1734.7838091428289, 1777.0239717368347, 1638.3188388649005, 2921.2517946493467, 2226.491326518071, 3040.8576793784327, 3639.158752831963, 2519.229705445304, 3965.8415863281507, 3113.8842189420684, 3568.6168451671547, 4159.17067770306, 3345.9764043293612, 5295.290310267605, 4114.816777565501, 4914.622971086976, 5548.111560423712, 4485.0850086991395, 7071.817539189053, 5474.669910407933, 5275.475538508406, 6536.535223043483, 5292.920838893055, 7061.427942713443, 6018.21814007528, 6783.5594410244785, 6412.872747114846, 6414.223523135013, 7281.853178474979, 6670.792151305642, 7585.93987005221, 8240.313128088615, 8059.581025650758, 9121.958155310585, 9043.804352857478, 9277.046018277932, 8757.01547739979, 9873.069818929565, 9856.865945301455, 10213.90691792821, 10138.083776309266, 10371.915940652325, 11009.664843115888, 12040.024925548805, 10836.72583748243, 11455.727172724466, 9401.110287685557, 10502.355748296724, 8916.555767735872, 8997.299657303654, 10557.902488152546, 8432.467836804792, 8179.822900928563, 8143.7847869657435, 7746.766666362037, 8622.899623563111, 8019.653983487366, 7935.578799566444, 8078.54399034271, 7941.936429110023, 7562.158255142098, 6606.741048538563, 7608.795968527198, 7137.7189829779, 6190.791801314033, 5883.019468762122, 5976.471346858822, 5181.287194649692, 5191.589750121512, 5115.587990893881, 5018.55052758234, 4608.83519281864, 4829.359222377252, 3051.625495050188, 4072.9804189838246, 4266.772040172908, 4438.170621917599, 3902.6604525615458, 3483.219967254497, 3605.8185708729206, 3030.5974480692785, 2633.676958975367, 2923.1427492111434, 2763.309708101828, 2323.0502302756877, 1421.8489444113968, 1693.6404511434043, 1550.2902143427025, 2063.1199272131907, 913.0062784875641, 721.927835619059, 455.82552710320533, 55.215161119017125, -471.88678148522933, 84.64817868019912 };
    
    
    std::vector<double> result = metrisca::numerics::Convolve(nonstd::span<double>(A.begin(), A.end()), nonstd::span<double>(B.begin(), B.end()));
    REQUIRE_THAT(result, Catch::Approx(result).margin(1e-3));
}

TEST_CASE("Convolution work as expected with N=1, M=8", "[convolution]")
{
    std::vector<double> A = { 39.93772758985904 };
    
    std::vector<double> B = { 0.880878835682763, 9.209429671555396, 2.698177230201413, 10.386466818378945, 13.267606335529742, 13.315523984055915, 11.052230493213033, 5.829957940639748 };
    
    std::vector<double> R = { 35.18029897917039, 367.8036934805444, 107.7590672089444, 414.8118824135282, 529.8780475978747, 531.7917695914597, 441.4009706982755, 232.83527209360582 };
    
    
    std::vector<double> result = metrisca::numerics::Convolve(nonstd::span<double>(A.begin(), A.end()), nonstd::span<double>(B.begin(), B.end()));
    REQUIRE_THAT(result, Catch::Approx(result).margin(1e-3));
}


